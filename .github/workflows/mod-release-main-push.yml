name: Mod Release (Main/Master Push)

on:
  push:
    branches:
      - main
      - master

jobs:
  mod_release:
    name: Assemble Mod and Release for ${{ matrix.friendlyName }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: forge112
            friendlyName: Forge 1.12
          # Add other modules and their friendly names as needed
          # - module: forge189
          #   friendlyName: Forge 1.8.9
          # ... and so on
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "8"

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3
        if: ${{ always() }}
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        if: ${{ always() }}
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Assemble mod with Gradle for ${{ matrix.friendlyName }}
        run: ./gradlew ${{ matrix.module }}:shadowJar -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000 -Dorg.gradle.internal.http.socketTimeout=60000 -Dorg.gradle.internal.http.connectionTimeout=60000

      - name: Save Gradle version to GITHUB_ENV
        run: |
          gradle_version=$(${{github.workspace}}/gradlew -q printVersionNumber)
          echo "version_number=${gradle_version}" >> $GITHUB_ENV

      - name: Calculate Hashes for the Jar
        id: calculate-hashes
        run: |
          sha1=$(sha1sum ./target/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar | awk '{print $1}')
          md5=$(md5sum ./target/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar | awk '{print $1}')
          sha256=$(sha256sum ./target/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar | awk '{print $1}')
          crc32=$(cksum ./target/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar | awk '{print $1}')
          echo "SHA1_HASH=${sha1}" >> $GITHUB_ENV
          echo "MD5_HASH=${md5}" >> $GITHUB_ENV
          echo "SHA256_HASH=${sha256}" >> $GITHUB_ENV
          echo "CRC32_HASH=${crc32}" >> $GITHUB_ENV

      - name: Create release entry with assembled mod .jar
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_number }}
          target_commitish: ${{ github.sha }}
          name: "${{ matrix.friendlyName }}: ${{ env.version_number }}"
          body: |
            Automated Release of LDFAWE
            Game Version: ${{ matrix.friendlyName }}
            Mod Version: ${{ env.version_number }}

            SHA-1: `${{ env.SHA1_HASH }}`
            SHA-256: `${{ env.SHA256_HASH }}`
            MD5: `${{ env.MD5_HASH }}`
            CRC-32: `${{ env.CRC32_HASH }}`

            Direct Link: [LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar](https://github.com/Mica-Technologies/LDFAWE/releases/download/${{ env.version_number }}/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar)
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            target/LDFAWE-${{ matrix.module }}-${{ env.version_number }}.jar